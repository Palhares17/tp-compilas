Terminals unused in grammar

    CHARACTER
    AND
    OR
    UNARY
    FUNCTION
    CONST
    CONTINUE
    BREAK


State 35 conflicts: 9 shift/reduce
State 71 conflicts: 4 shift/reduce


Grammar

    0 $accept: begin $end

    1 begin: main '(' ')' '{' body return '}'

    2 main: datatype ID

    3 datatype: INT
    4         | FLOAT
    5         | CHAR
    6         | VOID

    7 body: FOR '(' statement ';' condition ';' statement ')' '{' body '}'
    8     | IF '(' condition ')' '{' body '}' else
    9     | statement ';'
   10     | body body
   11     | PRINT '(' STR ')' ';'
   12     | WHILE '(' condition ')' '{' body '}'

   13 else: ELSE '{' body '}'
   14     | ε

   15 condition: value relop value
   16          | TRUE
   17          | FALSE
   18          | ε

   19 $@1: ε

   20 statement: datatype ID $@1 init
   21          | ID '=' expression
   22          | ID relop expression

   23 init: '=' value
   24     | ε

   25 expression: expression arithmetic expression
   26           | value

   27 arithmetic: ADD
   28           | SUBTRACT
   29           | MULTIPLY
   30           | DIVIDE

   31 relop: LT
   32      | GT
   33      | LE
   34      | GE
   35      | EQ
   36      | NE

   37 value: NUMBER
   38      | FLOAT_NUM
   39      | ID

   40 return: RETURN value ';'
   41       | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 7 8 11 12
    ')' (41) 1 7 8 11 12
    ';' (59) 7 9 11 40
    '=' (61) 21 23
    '{' (123) 1 7 8 12 13
    '}' (125) 1 7 8 12 13
    error (256)
    VOID <lexval> (258) 6
    CHARACTER <lexval> (259)
    PRINT <lexval> (260) 11
    INT <lexval> (261) 3
    FLOAT <lexval> (262) 4
    CHAR <lexval> (263) 5
    FOR <lexval> (264) 7
    IF <lexval> (265) 8
    ELSE <lexval> (266) 13
    TRUE <lexval> (267) 16
    FALSE <lexval> (268) 17
    NUMBER <lexval> (269) 37
    FLOAT_NUM <lexval> (270) 38
    ID <lexval> (271) 2 20 21 22 39
    LE <lexval> (272) 33
    GE <lexval> (273) 34
    EQ <lexval> (274) 35
    NE <lexval> (275) 36
    GT <lexval> (276) 32
    LT <lexval> (277) 31
    AND <lexval> (278)
    OR <lexval> (279)
    STR <lexval> (280) 11
    ADD <lexval> (281) 27
    MULTIPLY <lexval> (282) 29
    DIVIDE <lexval> (283) 30
    SUBTRACT <lexval> (284) 28
    UNARY <lexval> (285)
    RETURN <lexval> (286) 40
    WHILE <lexval> (287) 12
    FUNCTION <lexval> (288)
    CONST <lexval> (289)
    CONTINUE <lexval> (290)
    BREAK <lexval> (291)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    begin <lexval> (44)
        on left: 1
        on right: 0
    main <lexval> (45)
        on left: 2
        on right: 1
    datatype <lexval> (46)
        on left: 3 4 5 6
        on right: 2 20
    body <lexval> (47)
        on left: 7 8 9 10 11 12
        on right: 1 7 8 10 12 13
    else <lexval> (48)
        on left: 13 14
        on right: 8
    condition <lexval> (49)
        on left: 15 16 17 18
        on right: 7 8 12
    statement <lexval> (50)
        on left: 20 21 22
        on right: 7 9
    $@1 (51)
        on left: 19
        on right: 20
    init <lexval> (52)
        on left: 23 24
        on right: 20
    expression <lexval> (53)
        on left: 25 26
        on right: 21 22 25
    arithmetic <lexval> (54)
        on left: 27 28 29 30
        on right: 25
    relop <lexval> (55)
        on left: 31 32 33 34 35 36
        on right: 15 22
    value <lexval> (56)
        on left: 37 38 39
        on right: 15 23 26 40
    return <lexval> (57)
        on left: 40 41
        on right: 1


State 0

    0 $accept: • begin $end

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4

    begin     go to state 5
    main      go to state 6
    datatype  go to state 7


State 1

    6 datatype: VOID •

    $default  reduce using rule 6 (datatype)


State 2

    3 datatype: INT •

    $default  reduce using rule 3 (datatype)


State 3

    4 datatype: FLOAT •

    $default  reduce using rule 4 (datatype)


State 4

    5 datatype: CHAR •

    $default  reduce using rule 5 (datatype)


State 5

    0 $accept: begin • $end

    $end  shift, and go to state 8


State 6

    1 begin: main • '(' ')' '{' body return '}'

    '('  shift, and go to state 9


State 7

    2 main: datatype • ID

    ID  shift, and go to state 10


State 8

    0 $accept: begin $end •

    $default  accept


State 9

    1 begin: main '(' • ')' '{' body return '}'

    ')'  shift, and go to state 11


State 10

    2 main: datatype ID •

    $default  reduce using rule 2 (main)


State 11

    1 begin: main '(' ')' • '{' body return '}'

    '{'  shift, and go to state 12


State 12

    1 begin: main '(' ')' '{' • body return '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    datatype   go to state 18
    body       go to state 19
    statement  go to state 20


State 13

   11 body: PRINT • '(' STR ')' ';'

    '('  shift, and go to state 21


State 14

    7 body: FOR • '(' statement ';' condition ';' statement ')' '{' body '}'

    '('  shift, and go to state 22


State 15

    8 body: IF • '(' condition ')' '{' body '}' else

    '('  shift, and go to state 23


State 16

   21 statement: ID • '=' expression
   22          | ID • relop expression

    LE   shift, and go to state 24
    GE   shift, and go to state 25
    EQ   shift, and go to state 26
    NE   shift, and go to state 27
    GT   shift, and go to state 28
    LT   shift, and go to state 29
    '='  shift, and go to state 30

    relop  go to state 31


State 17

   12 body: WHILE • '(' condition ')' '{' body '}'

    '('  shift, and go to state 32


State 18

   20 statement: datatype • ID $@1 init

    ID  shift, and go to state 33


State 19

    1 begin: main '(' ')' '{' body • return '}'
   10 body: body • body

    VOID    shift, and go to state 1
    PRINT   shift, and go to state 13
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    FOR     shift, and go to state 14
    IF      shift, and go to state 15
    ID      shift, and go to state 16
    RETURN  shift, and go to state 34
    WHILE   shift, and go to state 17

    $default  reduce using rule 41 (return)

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20
    return     go to state 36


State 20

    9 body: statement • ';'

    ';'  shift, and go to state 37


State 21

   11 body: PRINT '(' • STR ')' ';'

    STR  shift, and go to state 38


State 22

    7 body: FOR '(' • statement ';' condition ';' statement ')' '{' body '}'

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    ID     shift, and go to state 16

    datatype   go to state 18
    statement  go to state 39


State 23

    8 body: IF '(' • condition ')' '{' body '}' else

    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41
    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    $default  reduce using rule 18 (condition)

    condition  go to state 45
    value      go to state 46


State 24

   33 relop: LE •

    $default  reduce using rule 33 (relop)


State 25

   34 relop: GE •

    $default  reduce using rule 34 (relop)


State 26

   35 relop: EQ •

    $default  reduce using rule 35 (relop)


State 27

   36 relop: NE •

    $default  reduce using rule 36 (relop)


State 28

   32 relop: GT •

    $default  reduce using rule 32 (relop)


State 29

   31 relop: LT •

    $default  reduce using rule 31 (relop)


State 30

   21 statement: ID '=' • expression

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    expression  go to state 47
    value       go to state 48


State 31

   22 statement: ID relop • expression

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    expression  go to state 49
    value       go to state 48


State 32

   12 body: WHILE '(' • condition ')' '{' body '}'

    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41
    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    $default  reduce using rule 18 (condition)

    condition  go to state 50
    value      go to state 46


State 33

   20 statement: datatype ID • $@1 init

    $default  reduce using rule 19 ($@1)

    $@1  go to state 51


State 34

   40 return: RETURN • value ';'

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    value  go to state 52


State 35

   10 body: body • body
   10     | body body •

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    VOID      [reduce using rule 10 (body)]
    PRINT     [reduce using rule 10 (body)]
    INT       [reduce using rule 10 (body)]
    FLOAT     [reduce using rule 10 (body)]
    CHAR      [reduce using rule 10 (body)]
    FOR       [reduce using rule 10 (body)]
    IF        [reduce using rule 10 (body)]
    ID        [reduce using rule 10 (body)]
    WHILE     [reduce using rule 10 (body)]
    $default  reduce using rule 10 (body)

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20


State 36

    1 begin: main '(' ')' '{' body return • '}'

    '}'  shift, and go to state 53


State 37

    9 body: statement ';' •

    $default  reduce using rule 9 (body)


State 38

   11 body: PRINT '(' STR • ')' ';'

    ')'  shift, and go to state 54


State 39

    7 body: FOR '(' statement • ';' condition ';' statement ')' '{' body '}'

    ';'  shift, and go to state 55


State 40

   16 condition: TRUE •

    $default  reduce using rule 16 (condition)


State 41

   17 condition: FALSE •

    $default  reduce using rule 17 (condition)


State 42

   37 value: NUMBER •

    $default  reduce using rule 37 (value)


State 43

   38 value: FLOAT_NUM •

    $default  reduce using rule 38 (value)


State 44

   39 value: ID •

    $default  reduce using rule 39 (value)


State 45

    8 body: IF '(' condition • ')' '{' body '}' else

    ')'  shift, and go to state 56


State 46

   15 condition: value • relop value

    LE  shift, and go to state 24
    GE  shift, and go to state 25
    EQ  shift, and go to state 26
    NE  shift, and go to state 27
    GT  shift, and go to state 28
    LT  shift, and go to state 29

    relop  go to state 57


State 47

   21 statement: ID '=' expression •
   25 expression: expression • arithmetic expression

    ADD       shift, and go to state 58
    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 21 (statement)

    arithmetic  go to state 62


State 48

   26 expression: value •

    $default  reduce using rule 26 (expression)


State 49

   22 statement: ID relop expression •
   25 expression: expression • arithmetic expression

    ADD       shift, and go to state 58
    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    $default  reduce using rule 22 (statement)

    arithmetic  go to state 62


State 50

   12 body: WHILE '(' condition • ')' '{' body '}'

    ')'  shift, and go to state 63


State 51

   20 statement: datatype ID $@1 • init

    '='  shift, and go to state 64

    $default  reduce using rule 24 (init)

    init  go to state 65


State 52

   40 return: RETURN value • ';'

    ';'  shift, and go to state 66


State 53

    1 begin: main '(' ')' '{' body return '}' •

    $default  reduce using rule 1 (begin)


State 54

   11 body: PRINT '(' STR ')' • ';'

    ';'  shift, and go to state 67


State 55

    7 body: FOR '(' statement ';' • condition ';' statement ')' '{' body '}'

    TRUE       shift, and go to state 40
    FALSE      shift, and go to state 41
    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    $default  reduce using rule 18 (condition)

    condition  go to state 68
    value      go to state 46


State 56

    8 body: IF '(' condition ')' • '{' body '}' else

    '{'  shift, and go to state 69


State 57

   15 condition: value relop • value

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    value  go to state 70


State 58

   27 arithmetic: ADD •

    $default  reduce using rule 27 (arithmetic)


State 59

   29 arithmetic: MULTIPLY •

    $default  reduce using rule 29 (arithmetic)


State 60

   30 arithmetic: DIVIDE •

    $default  reduce using rule 30 (arithmetic)


State 61

   28 arithmetic: SUBTRACT •

    $default  reduce using rule 28 (arithmetic)


State 62

   25 expression: expression arithmetic • expression

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    expression  go to state 71
    value       go to state 48


State 63

   12 body: WHILE '(' condition ')' • '{' body '}'

    '{'  shift, and go to state 72


State 64

   23 init: '=' • value

    NUMBER     shift, and go to state 42
    FLOAT_NUM  shift, and go to state 43
    ID         shift, and go to state 44

    value  go to state 73


State 65

   20 statement: datatype ID $@1 init •

    $default  reduce using rule 20 (statement)


State 66

   40 return: RETURN value ';' •

    $default  reduce using rule 40 (return)


State 67

   11 body: PRINT '(' STR ')' ';' •

    $default  reduce using rule 11 (body)


State 68

    7 body: FOR '(' statement ';' condition • ';' statement ')' '{' body '}'

    ';'  shift, and go to state 74


State 69

    8 body: IF '(' condition ')' '{' • body '}' else

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    datatype   go to state 18
    body       go to state 75
    statement  go to state 20


State 70

   15 condition: value relop value •

    $default  reduce using rule 15 (condition)


State 71

   25 expression: expression • arithmetic expression
   25           | expression arithmetic expression •

    ADD       shift, and go to state 58
    MULTIPLY  shift, and go to state 59
    DIVIDE    shift, and go to state 60
    SUBTRACT  shift, and go to state 61

    ADD       [reduce using rule 25 (expression)]
    MULTIPLY  [reduce using rule 25 (expression)]
    DIVIDE    [reduce using rule 25 (expression)]
    SUBTRACT  [reduce using rule 25 (expression)]
    $default  reduce using rule 25 (expression)

    arithmetic  go to state 62


State 72

   12 body: WHILE '(' condition ')' '{' • body '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    datatype   go to state 18
    body       go to state 76
    statement  go to state 20


State 73

   23 init: '=' value •

    $default  reduce using rule 23 (init)


State 74

    7 body: FOR '(' statement ';' condition ';' • statement ')' '{' body '}'

    VOID   shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    ID     shift, and go to state 16

    datatype   go to state 18
    statement  go to state 77


State 75

    8 body: IF '(' condition ')' '{' body • '}' else
   10     | body • body

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17
    '}'    shift, and go to state 78

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20


State 76

   10 body: body • body
   12     | WHILE '(' condition ')' '{' body • '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17
    '}'    shift, and go to state 79

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20


State 77

    7 body: FOR '(' statement ';' condition ';' statement • ')' '{' body '}'

    ')'  shift, and go to state 80


State 78

    8 body: IF '(' condition ')' '{' body '}' • else

    ELSE  shift, and go to state 81

    $default  reduce using rule 14 (else)

    else  go to state 82


State 79

   12 body: WHILE '(' condition ')' '{' body '}' •

    $default  reduce using rule 12 (body)


State 80

    7 body: FOR '(' statement ';' condition ';' statement ')' • '{' body '}'

    '{'  shift, and go to state 83


State 81

   13 else: ELSE • '{' body '}'

    '{'  shift, and go to state 84


State 82

    8 body: IF '(' condition ')' '{' body '}' else •

    $default  reduce using rule 8 (body)


State 83

    7 body: FOR '(' statement ';' condition ';' statement ')' '{' • body '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    datatype   go to state 18
    body       go to state 85
    statement  go to state 20


State 84

   13 else: ELSE '{' • body '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17

    datatype   go to state 18
    body       go to state 86
    statement  go to state 20


State 85

    7 body: FOR '(' statement ';' condition ';' statement ')' '{' body • '}'
   10     | body • body

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17
    '}'    shift, and go to state 87

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20


State 86

   10 body: body • body
   13 else: ELSE '{' body • '}'

    VOID   shift, and go to state 1
    PRINT  shift, and go to state 13
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    CHAR   shift, and go to state 4
    FOR    shift, and go to state 14
    IF     shift, and go to state 15
    ID     shift, and go to state 16
    WHILE  shift, and go to state 17
    '}'    shift, and go to state 88

    datatype   go to state 18
    body       go to state 35
    statement  go to state 20


State 87

    7 body: FOR '(' statement ';' condition ';' statement ')' '{' body '}' •

    $default  reduce using rule 7 (body)


State 88

   13 else: ELSE '{' body '}' •

    $default  reduce using rule 13 (else)
